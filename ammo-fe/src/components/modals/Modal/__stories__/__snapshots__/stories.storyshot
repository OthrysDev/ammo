// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Modals/Modal Default 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <I18nProvider
    onError={[Function]}
  >
    <IntlProvider
      defaultFormats={Object {}}
      defaultLocale="en"
      formats={Object {}}
      locale="en"
      messages={
        Object {
          "Body": "Body",
          "Headers": "Headers",
          "Request": "Request",
          "Response": "Response",
        }
      }
      onError={[Function]}
      textComponent={Symbol(react.fragment)}
    >
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#250902",
                "light": "#640D14",
                "main": "#38040E",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#800E13",
                "light": "#FF7780",
                "main": "#AD2831",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "Arial",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "Arial",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "Arial",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "Arial",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": 1.66,
              },
              "fontFamily": "Arial",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "Arial",
                "fontSize": "6rem",
                "fontWeight": 300,
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "Arial",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "Arial",
                "fontSize": "3rem",
                "fontWeight": 400,
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "Arial",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "Arial",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "Arial",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "Arial",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "Arial",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "Arial",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <StylesProvider
          generateClassName={[Function]}
        >
          <Modal
            ariaDescribedby="aria-described-by"
            ariaLabelledby="aria-labelled-by"
            open={true}
          >
            <WithStyles(ForwardRef(Dialog))
              PaperProps={
                Object {
                  "className": "makeStyles-root",
                }
              }
              aria-describedby="aria-described-by"
              aria-labelledby="aria-labelled-by"
              data-cy="modal"
              open={true}
            >
              <ForwardRef(Dialog)
                PaperProps={
                  Object {
                    "className": "makeStyles-root",
                  }
                }
                aria-describedby="aria-described-by"
                aria-labelledby="aria-labelled-by"
                classes={
                  Object {
                    "container": "MuiDialog-container",
                    "paper": "MuiDialog-paper",
                    "paperFullScreen": "MuiDialog-paperFullScreen",
                    "paperFullWidth": "MuiDialog-paperFullWidth",
                    "paperScrollBody": "MuiDialog-paperScrollBody",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                    "paperWidthLg": "MuiDialog-paperWidthLg",
                    "paperWidthMd": "MuiDialog-paperWidthMd",
                    "paperWidthSm": "MuiDialog-paperWidthSm",
                    "paperWidthXl": "MuiDialog-paperWidthXl",
                    "paperWidthXs": "MuiDialog-paperWidthXs",
                    "root": "MuiDialog-root",
                    "scrollBody": "MuiDialog-scrollBody",
                    "scrollPaper": "MuiDialog-scrollPaper",
                  }
                }
                data-cy="modal"
                open={true}
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Naked": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "options": Object {
                        "defaultTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        },
                        "name": "MuiBackdrop",
                      },
                      "propTypes": Object {
                        "classes": [Function],
                        "innerRef": [Function],
                      },
                      "render": [Function],
                      "useStyles": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root"
                  closeAfterTransition={true}
                  data-cy="modal"
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  open={true}
                >
                  <ForwardRef(Portal)
                    disablePortal={false}
                  >
                    <Portal
                      containerInfo={
                        <body
                          style="padding-right: 0px; overflow: hidden;"
                        >
                          <div
                            class="MuiDialog-root"
                            data-cy="modal"
                            role="presentation"
                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                          >
                            <div
                              aria-hidden="true"
                              class="MuiBackdrop-root"
                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                            />
                            <div
                              data-test="sentinelStart"
                              tabindex="0"
                            />
                            <div
                              class="MuiDialog-container MuiDialog-scrollPaper"
                              role="none presentation"
                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                              tabindex="-1"
                            >
                              <div
                                aria-describedby="aria-described-by"
                                aria-labelledby="aria-labelled-by"
                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm makeStyles-root MuiPaper-elevation24 MuiPaper-rounded"
                                role="dialog"
                              >
                                <div
                                  class="MuiBox-root MuiBox-root"
                                >
                                  <div
                                    class="MuiDialogTitle-root"
                                  >
                                    <h2
                                      class="MuiTypography-root MuiTypography-h6"
                                    >
                                      This an abstraction for all modals
                                    </h2>
                                  </div>
                                  <div
                                    class="MuiDialogContent-root"
                                  >
                                    <p
                                      class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                    >
                                      You should not use this component but instead, sub-modal-components with specific purposes.
                                    </p>
                                  </div>
                                  <div
                                    class="MuiDialogActions-root MuiDialogActions-spacing"
                                  >
                                    <button
                                      class="MuiButtonBase-root MuiButton-root MuiButton-text"
                                      tabindex="0"
                                      type="button"
                                    >
                                      <span
                                        class="MuiButton-label"
                                      >
                                        Ok
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              data-test="sentinelEnd"
                              tabindex="0"
                            />
                          </div>
                        </body>
                      }
                    >
                      <div
                        className="MuiDialog-root"
                        data-cy="modal"
                        onKeyDown={[Function]}
                        role="presentation"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1300,
                          }
                        }
                      >
                        <WithStyles(ForwardRef(Backdrop))
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Backdrop)
                            classes={
                              Object {
                                "invisible": "MuiBackdrop-invisible",
                                "root": "MuiBackdrop-root",
                              }
                            }
                            onClick={[Function]}
                            open={true}
                            transitionDuration={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <ForwardRef(Fade)
                              in={true}
                              onClick={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                            >
                              <Transition
                                appear={true}
                                enter={true}
                                exit={true}
                                in={true}
                                mountOnEnter={false}
                                onClick={[Function]}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                                unmountOnExit={false}
                              >
                                <div
                                  aria-hidden={true}
                                  className="MuiBackdrop-root"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                      "visibility": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </ForwardRef(Fade)>
                          </ForwardRef(Backdrop)>
                        </WithStyles(ForwardRef(Backdrop))>
                        <Unstable_TrapFocus
                          disableAutoFocus={false}
                          disableEnforceFocus={false}
                          disableRestoreFocus={false}
                          getDoc={[Function]}
                          isEnabled={[Function]}
                          open={true}
                        >
                          <div
                            data-test="sentinelStart"
                            tabIndex={0}
                          />
                          <ForwardRef(Fade)
                            appear={true}
                            in={true}
                            onEnter={[Function]}
                            onExited={[Function]}
                            role="none presentation"
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              role="none presentation"
                              tabIndex="-1"
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                className="MuiDialog-container MuiDialog-scrollPaper"
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                role="none presentation"
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  aria-describedby="aria-described-by"
                                  aria-labelledby="aria-labelled-by"
                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm makeStyles-root"
                                  elevation={24}
                                  role="dialog"
                                >
                                  <ForwardRef(Paper)
                                    aria-describedby="aria-described-by"
                                    aria-labelledby="aria-labelled-by"
                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm makeStyles-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={24}
                                    role="dialog"
                                  >
                                    <div
                                      aria-describedby="aria-described-by"
                                      aria-labelledby="aria-labelled-by"
                                      className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm makeStyles-root MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <Styled(MuiBox)>
                                        <div
                                          className="MuiBox-root MuiBox-root"
                                        >
                                          <WithStyles(ForwardRef(DialogTitle))>
                                            <ForwardRef(DialogTitle)
                                              classes={
                                                Object {
                                                  "root": "MuiDialogTitle-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiDialogTitle-root"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h2"
                                                  variant="h6"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h2"
                                                    variant="h6"
                                                  >
                                                    <h2
                                                      className="MuiTypography-root MuiTypography-h6"
                                                    >
                                                      This an abstraction for all modals
                                                    </h2>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </ForwardRef(DialogTitle)>
                                          </WithStyles(ForwardRef(DialogTitle))>
                                          <WithStyles(ForwardRef(DialogContent))>
                                            <ForwardRef(DialogContent)
                                              classes={
                                                Object {
                                                  "dividers": "MuiDialogContent-dividers",
                                                  "root": "MuiDialogContent-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiDialogContent-root"
                                              >
                                                <WithStyles(ForwardRef(DialogContentText))>
                                                  <ForwardRef(DialogContentText)
                                                    classes={
                                                      Object {
                                                        "root": "MuiDialogContentText-root",
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      classes={
                                                        Object {
                                                          "root": "MuiDialogContentText-root",
                                                        }
                                                      }
                                                      color="textSecondary"
                                                      component="p"
                                                      variant="body1"
                                                    >
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root MuiDialogContentText-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        color="textSecondary"
                                                        component="p"
                                                        variant="body1"
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                        >
                                                          You should not use this component but instead, sub-modal-components with specific purposes.
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </ForwardRef(DialogContentText)>
                                                </WithStyles(ForwardRef(DialogContentText))>
                                              </div>
                                            </ForwardRef(DialogContent)>
                                          </WithStyles(ForwardRef(DialogContent))>
                                          <WithStyles(ForwardRef(DialogActions))>
                                            <ForwardRef(DialogActions)
                                              classes={
                                                Object {
                                                  "root": "MuiDialogActions-root",
                                                  "spacing": "MuiDialogActions-spacing",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <WithStyles(ForwardRef(Button))>
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary",
                                                        "containedSecondary": "MuiButton-containedSecondary",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "MuiButton-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "MuiButton-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root MuiButton-text"
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="MuiButton-focusVisible"
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root MuiButton-text"
                                                        classes={
                                                          Object {
                                                            "disabled": "MuiButtonBase-disabled",
                                                            "focusVisible": "MuiButtonBase-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="MuiButton-focusVisible"
                                                        type="button"
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiButton-label"
                                                          >
                                                            Ok
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </ForwardRef(DialogActions)>
                                          </WithStyles(ForwardRef(DialogActions))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </div>
                            </Transition>
                          </ForwardRef(Fade)>
                          <div
                            data-test="sentinelEnd"
                            tabIndex={0}
                          />
                        </Unstable_TrapFocus>
                      </div>
                    </Portal>
                  </ForwardRef(Portal)>
                </ForwardRef(Modal)>
              </ForwardRef(Dialog)>
            </WithStyles(ForwardRef(Dialog))>
          </Modal>
        </StylesProvider>
      </ThemeProvider>
    </IntlProvider>
  </I18nProvider>
</Provider>
`;
